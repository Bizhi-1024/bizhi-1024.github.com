<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bizhi-1024</title>
  
  
  <link href="https://bizhi-1024.github.io/atom.xml" rel="self"/>
  
  <link href="https://bizhi-1024.github.io/"/>
  <updated>2022-04-16T16:17:30.814Z</updated>
  <id>https://bizhi-1024.github.io/</id>
  
  <author>
    <name>毕之</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>大数据 — 虚拟机环境搭建</title>
    <link href="https://bizhi-1024.github.io/2022/04/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%20%E2%80%94%20%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://bizhi-1024.github.io/2022/04/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%20%E2%80%94%20%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2022-04-16T16:16:19.721Z</published>
    <updated>2022-04-16T16:17:30.814Z</updated>
    
    <content type="html"><![CDATA[<h3 id="大数据-虚拟机环境搭建"><a class="markdownIt-Anchor" href="#大数据-虚拟机环境搭建"></a> 大数据 — 虚拟机环境搭建</h3><h4 id="一-虚拟机vmware安装"><a class="markdownIt-Anchor" href="#一-虚拟机vmware安装"></a> 一. 虚拟机VMware安装</h4><p>下载VMware进行安装即可</p><h4 id="二-linux环境安装"><a class="markdownIt-Anchor" href="#二-linux环境安装"></a> 二. Linux环境安装</h4><ol><li><p>新建虚拟机, 按照以下步骤进行</p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA1.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA2.png" alt="" /></p></li></ol><p>​<img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA3.png" alt="" /></p><p>​</p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA4.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA5.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA6.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA7.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA9.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA8.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA10.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA11.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA12.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA13.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA14.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA15.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA16.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA17.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA18.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA19.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA20.png" alt="" /></p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BA21.png" alt="" /></p><ol start="2"><li><p>使用yum安装需要虚拟机可以正常上网，yum安装前可以先测试下虚拟机联网情况</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop200 ~]# ping www.baidu.com</span><br></pre></td></tr></table></figure><p>(1). 安装epel-release</p><p><font color="blue">注：Extra Packages for Enterprise Linux是为“红帽系”的操作系统提供额外的软件包，适用于RHEL、CentOS和Scientific Linux。相当于是一个软件仓库，大多数rpm包在官方 repository 中是找不到的）</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop200 ~]# yum install -y epel-release</span><br></pre></td></tr></table></figure><p>(2). 注意：如果Linux安装的是最小系统版，还需要安装如下工具；如果安装的是Linux桌面标准版，不需要执行如下操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net-tool：工具包集合，包含ifconfig等命令</span><br><span class="line">[root@hadoop200 ~]# yum install -y net-tools </span><br><span class="line">vim：编辑器</span><br><span class="line">[root@hadoop200 ~]# yum install -y vim</span><br></pre></td></tr></table></figure></li><li><p>配置ip地址和主机名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop200 ~]# ifconfig  # 查看ip地址</span><br><span class="line">[root@hadoop200 ~]# hostname  # 查看主机名</span><br><span class="line">[root@hadoop200 ~]# vim /etc/sysconfig/network-scripts/ifcfg-ens33 #更改ip地址</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/%E8%99%9A%E6%8B%9F%E6%9C%BAip%E9%85%8D%E7%BD%AE.png" alt="" /></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop200 ~]# vim /etc/hostname#更改主机名</span><br></pre></td></tr></table></figure></li><li><p>关闭防火墙, 关闭防火墙开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop200 ~]# systemctl stop firewalld#关闭防火墙</span><br><span class="line">[root@hadoop200 ~]# systemctl disable firewalld.service#禁用防火墙</span><br><span class="line">[root@hadoop200 ~]# systemctl status firewalld#查看防火墙状态</span><br></pre></td></tr></table></figure></li><li><p>创建用户, 并修改用户密码(根据情况选择是否还需要新建用户)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop200 ~]# useradd bizhi#创建用户</span><br><span class="line">[root@hadoop200 ~]# passwd 000000#修改密码</span><br></pre></td></tr></table></figure></li><li><p>配置用户具有root权限, 方便后期加sudo执行root权限的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop200 ~]# vim /etc/sudoers</span><br><span class="line"></span><br><span class="line">修改/etc/sudoers文件，在%wheel这行下面添加一行，如下所示：</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Allow root to run any commands anywhere</span></span></span><br><span class="line">root    ALL=(ALL)     ALL</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Allows people in group wheel to run all commands</span></span></span><br><span class="line"><span class="meta">%</span><span class="bash">wheel  ALL=(ALL)       ALL</span></span><br><span class="line">bizhi   ALL=(ALL)     NOPASSWD:ALL</span><br></pre></td></tr></table></figure><p><font color="blue">注意：bizhi这一行不要直接放到root行下面，因为所有用户都属于wheel组，你先配置了bizhi具有免密功能，但是程序执行到%wheel行时，该功能又被覆盖回需要密码。所以bizhi要放到%wheel这行下面。</font>&gt;</p></li><li><p>在/opt目录下创建文件夹, 并修改所属用户和所属组</p><p>(1). 在/opt目录下创建module, software文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop200 ~]# mkdir /opt/module</span><br><span class="line">[root@hadoop200 ~]# mkdir /opt/software</span><br></pre></td></tr></table></figure><p>(2). 修改module, software文件夹的所有者和所属组均为bizhi用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop200 ~]# chown bizhi:bizhi /opt/module </span><br><span class="line">[root@hadoop200 ~]# chown bizhi:bizhi /opt/software</span><br></pre></td></tr></table></figure><p>(3). 查看module, software文件夹的所有者和所属组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop200 ~]# cd /opt/#进入opt目录</span><br><span class="line">[root@hadoop200 opt]# ll  #查看</span><br></pre></td></tr></table></figure></li><li><p>卸载虚拟机自带的 JDK</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop200 ~]# rpm -qa | grep -i java | xargs -n1 rpm -e --nodeps</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">rpm -qa：查询所安装的所有rpm软件包</span></span><br><span class="line"><span class="meta">#</span><span class="bash">grep -i：忽略大小写</span></span><br><span class="line"><span class="meta">#</span><span class="bash">xargs -n1：表示每次只传递一个参数</span></span><br><span class="line"><span class="meta">#</span><span class="bash">rpm -e –nodeps：强制卸载软件</span></span><br></pre></td></tr></table></figure><p><font color="blue">注意：如果你的虚拟机是最小化安装不需要执行这一步。</font></p></li><li><p>重启虚拟机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop200 ~]# reboot</span><br></pre></td></tr></table></figure></li><li><p>检查ip地址, 主机名等, 模板机配置完毕</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;大数据-虚拟机环境搭建&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#大数据-虚拟机环境搭建&quot;&gt;&lt;/a&gt; 大数据 — 虚拟机环境搭建&lt;/h3&gt;
&lt;h4 id=&quot;一-虚拟机vmware安装&quot;&gt;&lt;a class=&quot;markdownIt-An</summary>
      
    
    
    
    <category term="大数据环境" scheme="https://bizhi-1024.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="大数据环境" scheme="https://bizhi-1024.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch教程</title>
    <link href="https://bizhi-1024.github.io/2022/03/06/ElasticSearch%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
    <id>https://bizhi-1024.github.io/2022/03/06/ElasticSearch%E7%AC%AC%E4%B8%80%E5%A4%A9/</id>
    <published>2022-03-06T14:44:29.772Z</published>
    <updated>2022-03-06T14:45:21.825Z</updated>
    
    <content type="html"><![CDATA[<h1 id="elasticsearch第一天"><a class="markdownIt-Anchor" href="#elasticsearch第一天"></a> ElasticSearch第一天</h1><h2 id="学习目标"><a class="markdownIt-Anchor" href="#学习目标"></a> 学习目标：</h2><ol><li>能够理解ElasticSearch的作用</li><li>能够安装ElasticSearch服务</li><li>能够理解ElasticSearch的相关概念</li><li>能够使用Postman发送Restful请求操作ElasticSearch</li><li>能够理解分词器的作用</li><li>能够使用ElasticSearch集成IK分词器</li><li>能够完成es集群搭建</li></ol><h1 id="第一章-elasticsearch简介"><a class="markdownIt-Anchor" href="#第一章-elasticsearch简介"></a> 第一章 ElasticSearch简介</h1><h2 id="11-什么是elasticsearch"><a class="markdownIt-Anchor" href="#11-什么是elasticsearch"></a> 1.1 什么是ElasticSearch</h2><p>Elaticsearch，简称为es， es是一个开源的高扩展的分布式全文检索引擎，它可以近乎实时的存储、检索数据；本身扩展性很好，可以扩展到上百台服务器，处理PB级别的数据。es也使用Java开发并使用Lucene作为其核心来实现所有索引和搜索的功能，但是它的目的是通过简单的RESTful API来隐藏Lucene的复杂性，从而让全文搜索变得简单。</p><h2 id="12-elasticsearch的使用案例"><a class="markdownIt-Anchor" href="#12-elasticsearch的使用案例"></a> 1.2 ElasticSearch的使用案例</h2><ul><li>2013年初，GitHub抛弃了Solr，采取ElasticSearch 来做PB级的搜索。 “GitHub使用ElasticSearch搜索20TB的数据，包括13亿文件和1300亿行代码”</li><li>维基百科：启动以elasticsearch为基础的核心搜索架构</li><li>SoundCloud：“SoundCloud使用ElasticSearch为1.8亿用户提供即时而精准的音乐搜索服务”</li><li>百度：百度目前广泛使用ElasticSearch作为文本数据分析，采集百度所有服务器上的各类指标数据及用户自定义数据，通过对各种数据进行多维分析展示，辅助定位分析实例异常或业务层面异常。目前覆盖百度内部20多个业务线（包括casio、云分析、网盟、预测、文库、直达号、钱包、风控等），单集群最大100台机器，200个ES节点，每天导入30TB+数据</li><li>新浪使用ES 分析处理32亿条实时日志</li><li>阿里使用ES 构建挖财自己的日志采集和分析体系</li></ul><h2 id="13-elasticsearch对比solr"><a class="markdownIt-Anchor" href="#13-elasticsearch对比solr"></a> 1.3 ElasticSearch对比Solr</h2><ul><li>Solr 利用 Zookeeper 进行分布式管理，而 Elasticsearch 自身带有分布式协调管理功能;</li><li>Solr 支持更多格式的数据，而 Elasticsearch 仅支持json文件格式；</li><li>Solr 官方提供的功能更多，而 Elasticsearch 本身更注重于核心功能，高级功能多有第三方插件提供；</li><li>Solr 在传统的搜索应用中表现好于 Elasticsearch，但在处理实时搜索应用时效率明显低于 Elasticsearch</li></ul><h1 id="第二章-elasticsearch安装与启动"><a class="markdownIt-Anchor" href="#第二章-elasticsearch安装与启动"></a> 第二章 ElasticSearch安装与启动</h1><h2 id="21-下载es压缩包"><a class="markdownIt-Anchor" href="#21-下载es压缩包"></a> 2.1 下载ES压缩包</h2><p>ElasticSearch分为Linux和Window版本，基于我们主要学习的是ElasticSearch的Java客户端的使用，所以我们课程中使用的是安装较为简便的Window版本，项目上线后，公司的运维人员会安装Linux版的ES供我们连接使用。</p><p>ElasticSearch的官方地址： <a href="https://www.elastic.co/products/elasticsearch">https://www.elastic.co/products/elasticsearch</a></p><p><img src="image%5C1.png" alt="" /></p><p><img src="image%5C2.png" alt="" /></p><p><img src="image%5C7.png" alt="" /></p><p><img src="image%5C8.png" alt="" /></p><p>在资料中已经提供了下载好的5.6.8的压缩包：</p><p><img src="image%5C4.png" alt="" /></p><h2 id="22-安装es服务"><a class="markdownIt-Anchor" href="#22-安装es服务"></a> 2.2 安装ES服务</h2><p>Window版的ElasticSearch的安装很简单，类似Window版的Tomcat，解压开即安装完毕，解压后的ElasticSearch的目录结构如下：</p><p><img src="image%5C5.png" alt="" /></p><p>修改elasticsearch配置文件：config/elasticsearch.yml，增加以下两句命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http.cors.enabled: true</span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br></pre></td></tr></table></figure><p>此步为允许elasticsearch跨越访问，如果不安装后面的elasticsearch-head是可以不修改，直接启动。</p><h2 id="23-启动es服务"><a class="markdownIt-Anchor" href="#23-启动es服务"></a> 2.3 启动ES服务</h2><p>点击ElasticSearch下的bin目录下的elasticsearch.bat启动，控制台显示的日志信息如下：</p><p><img src="image%5C6.png" alt="" /></p><p><img src="image%5C9.png" alt="" /></p><p>注意：9300是tcp通讯端口，集群间和TCPClient都执行该端口，9200是http协议的RESTful接口 。</p><p>通过浏览器访问ElasticSearch服务器，看到如下返回的json信息，代表服务启动成功：</p><p><img src="image%5C10.png" alt="" /></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：ElasticSearch是使用java开发的，且本版本的es需要的jdk版本要是1.8以上，所以安装ElasticSearch之前保证JDK1.8+安装完毕，并正确的配置好JDK环境变量，否则启动ElasticSearch失败。</span><br></pre></td></tr></table></figure><h2 id="24-安装es的图形化界面插件"><a class="markdownIt-Anchor" href="#24-安装es的图形化界面插件"></a> 2.4 安装ES的图形化界面插件</h2><p>ElasticSearch不同于Solr自带图形化界面，我们可以通过安装ElasticSearch的head插件，完成图形化界面的效果，完成索引数据的查看。安装插件的方式有两种，在线安装和本地安装。本文档采用本地安装方式进行head插件的安装。elasticsearch-5-*以上版本安装head需要安装node和grunt</p><p>1）下载head插件：<a href="https://github.com/mobz/elasticsearch-head">https://github.com/mobz/elasticsearch-head</a></p><p>在资料中已经提供了elasticsearch-head-master插件压缩包：</p><p><img src="image%5C3.png" alt="" /></p><p>2）将elasticsearch-head-master压缩包解压到任意目录，但是要和elasticsearch的安装目录区别开</p><p>3）下载nodejs：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><p>在资料中已经提供了nodejs安装程序：</p><p><img src="image%5C14.png" alt="" /></p><p>双击安装程序，步骤截图如下：</p><p><img src="image%5C15.png" alt="" /></p><p><img src="image%5C16.png" alt="" /></p><p><img src="image%5C17.png" alt="" /></p><p><img src="image%5C18.png" alt="" /></p><p><img src="image%5C20.png" alt="" /></p><p>安装完毕，可以通过cmd控制台输入：node -v 查看版本号</p><p>5）将grunt安装为全局命令 ，Grunt是基于Node.js的项目构建工具</p><p>在cmd控制台中输入如下执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g grunt-cli</span><br></pre></td></tr></table></figure><p>执行结果如下图：</p><p><img src="image%5C21.png" alt="" /></p><p>6）进入elasticsearch-head-master目录启动head，在命令提示符下输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;npm install</span><br><span class="line">&gt;grunt server</span><br></pre></td></tr></table></figure><p><img src="image%5C23.png" alt="" /></p><p>7）打开浏览器，输入 <a href="http://localhost:9100">http://localhost:9100</a>，看到如下页面：</p><p><img src="image%5C24.png" alt="" /></p><p>如果不能成功连接到es服务，需要修改ElasticSearch的config目录下的配置文件：config/elasticsearch.yml，增加以下两句命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http.cors.enabled: true</span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br></pre></td></tr></table></figure><p>然后重新启动ElasticSearch服务。</p><h1 id="第三章-elasticsearch相关概念术语"><a class="markdownIt-Anchor" href="#第三章-elasticsearch相关概念术语"></a> 第三章 ElasticSearch相关概念(术语)</h1><h2 id="31-概述"><a class="markdownIt-Anchor" href="#31-概述"></a> 3.1 概述</h2><p>Elasticsearch是面向文档(document oriented)的，这意味着它可以存储整个对象或文档(document)。然而它不仅仅是存储，还会索引(index)每个文档的内容使之可以被搜索。在Elasticsearch中，你可以对文档（而非成行成列的数据）进行索引、搜索、排序、过滤。Elasticsearch比传统关系型数据库如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Relational DB -&gt; Databases -&gt; Tables -&gt; Rows -&gt; Columns</span><br><span class="line">Elasticsearch -&gt; Indices   -&gt; Types  -&gt; Documents -&gt; Fields</span><br></pre></td></tr></table></figure><h2 id="32-elasticsearch核心概念"><a class="markdownIt-Anchor" href="#32-elasticsearch核心概念"></a> 3.2 <strong>Elasticsearch核心概念</strong></h2><h3 id="321-索引-index"><a class="markdownIt-Anchor" href="#321-索引-index"></a> 3.2.1 索引 index</h3><p>一个索引就是一个拥有几分相似特征的文档的集合。比如说，你可以有一个客户数据的索引，另一个产品目录的索引，还有一个订单数据的索引。一个索引由一个名字来标识（必须全部是小写字母的），并且当我们要对对应于这个索引中的文档进行索引、搜索、更新和删除的时候，都要使用到这个名字。在一个集群中，可以定义任意多的索引。</p><h3 id="322-类型-type"><a class="markdownIt-Anchor" href="#322-类型-type"></a> 3.2.2 类型 type</h3><p>在一个索引中，你可以定义一种或多种类型。一个类型是你的索引的一个逻辑上的分类/分区，其语义完全由你来定。通常，会为具有一组共同字段的文档定义一个类型。比如说，我们假设你运营一个博客平台并且将你所有的数据存储到一个索引中。在这个索引中，你可以为用户数据定义一个类型，为博客数据定义另一个类型，当然，也可以为评论数据定义另一个类型。</p><h3 id="323-字段field"><a class="markdownIt-Anchor" href="#323-字段field"></a> 3.2.3 字段Field</h3><p>相当于是数据表的字段，对文档数据根据不同属性进行的分类标识</p><h3 id="324-映射-mapping"><a class="markdownIt-Anchor" href="#324-映射-mapping"></a> 3.2.4 映射 mapping</h3><p>mapping是处理数据的方式和规则方面做一些限制，如某个字段的数据类型、默认值、分析器、是否被索引等等，这些都是映射里面可以设置的，其它就是处理es里面数据的一些使用规则设置也叫做映射，按着最优规则处理数据对性能提高很大，因此才需要建立映射，并且需要思考如何建立映射才能对性能更好。</p><h3 id="325-文档-document"><a class="markdownIt-Anchor" href="#325-文档-document"></a> 3.2.5 文档 document</h3><p>一个文档是一个可被索引的基础信息单元。比如，你可以拥有某一个客户的文档，某一个产品的一个文档，当然，也可以拥有某个订单的一个文档。文档以JSON（Javascript Object Notation）格式来表示，而JSON是一个到处存在的互联网数据交互格式。</p><p>在一个index/type里面，你可以存储任意多的文档。注意，尽管一个文档，物理上存在于一个索引之中，文档必须被索引/赋予一个索引的type。</p><h3 id="326-接近实时-nrt"><a class="markdownIt-Anchor" href="#326-接近实时-nrt"></a> 3.2.6 接近实时 NRT</h3><p>Elasticsearch是一个接近实时的搜索平台。这意味着，从索引一个文档直到这个文档能够被搜索到有一个轻微的延迟（通常是1秒以内）</p><h3 id="327-集群-cluster"><a class="markdownIt-Anchor" href="#327-集群-cluster"></a> 3.2.7 集群 cluster</h3><p>一个集群就是由一个或多个节点组织在一起，它们共同持有整个的数据，并一起提供索引和搜索功能。一个集群由一个唯一的名字标识，这个名字默认就是“elasticsearch”。这个名字是重要的，因为一个节点只能通过指定某个集群的名字，来加入这个集群</p><h3 id="328-节点-node"><a class="markdownIt-Anchor" href="#328-节点-node"></a> 3.2.8 节点 node</h3><p>一个节点是集群中的一个服务器，作为集群的一部分，它存储数据，参与集群的索引和搜索功能。和集群类似，一个节点也是由一个名字来标识的，默认情况下，这个名字是一个随机的漫威漫画角色的名字，这个名字会在启动的时候赋予节点。这个名字对于管理工作来说挺重要的，因为在这个管理过程中，你会去确定网络中的哪些服务器对应于Elasticsearch集群中的哪些节点。</p><p>一个节点可以通过配置集群名称的方式来加入一个指定的集群。默认情况下，每个节点都会被安排加入到一个叫做“elasticsearch”的集群中，这意味着，如果你在你的网络中启动了若干个节点，并假定它们能够相互发现彼此，它们将会自动地形成并加入到一个叫做“elasticsearch”的集群中。</p><p>在一个集群里，只要你想，可以拥有任意多个节点。而且，如果当前你的网络中没有运行任何Elasticsearch节点，这时启动一个节点，会默认创建并加入一个叫做“elasticsearch”的集群。</p><h3 id="329-分片和复制-shardsreplicas"><a class="markdownIt-Anchor" href="#329-分片和复制-shardsreplicas"></a> 3.2.9 分片和复制 shards&amp;replicas</h3><p>一个索引可以存储超出单个结点硬件限制的大量数据。比如，一个具有10亿文档的索引占据1TB的磁盘空间，而任一节点都没有这样大的磁盘空间；或者单个节点处理搜索请求，响应太慢。为了解决这个问题，Elasticsearch提供了将索引划分成多份的能力，这些份就叫做分片。当你创建一个索引的时候，你可以指定你想要的分片的数量。每个分片本身也是一个功能完善并且独立的“索引”，这个“索引”可以被放置到集群中的任何节点上。分片很重要，主要有两方面的原因：<br />1）允许你水平分割/扩展你的内容容量。<br />2）允许你在分片（潜在地，位于多个节点上）之上进行分布式的、并行的操作，进而提高性能/吞吐量。</p><p>至于一个分片怎样分布，它的文档怎样聚合回搜索请求，是完全由Elasticsearch管理的，对于作为用户的你来说，这些都是透明的。</p><p>在一个网络/云的环境里，失败随时都可能发生，在某个分片/节点不知怎么的就处于离线状态，或者由于任何原因消失了，这种情况下，有一个故障转移机制是非常有用并且是强烈推荐的。为此目的，Elasticsearch允许你创建分片的一份或多份拷贝，这些拷贝叫做复制分片，或者直接叫复制。</p><p>复制之所以重要，有两个主要原因： 在分片/节点失败的情况下，提供了高可用性。因为这个原因，注意到复制分片从不与原/主要（original/primary）分片置于同一节点上是非常重要的。扩展你的搜索量/吞吐量，因为搜索可以在所有的复制上并行运行。总之，每个索引可以被分成多个分片。一个索引也可以被复制0次（意思是没有复制）或多次。一旦复制了，每个索引就有了主分片（作为复制源的原来的分片）和复制分片（主分片的拷贝）之别。分片和复制的数量可以在索引创建的时候指定。在索引创建之后，你可以在任何时候动态地改变复制的数量，但是你事后不能改变分片的数量。</p><p>默认情况下，Elasticsearch中的每个索引被分片5个主分片和1个复制，这意味着，如果你的集群中至少有两个节点，你的索引将会有5个主分片和另外5个复制分片（1个完全拷贝），这样的话每个索引总共就有10个分片。</p><h1 id="第四章-elasticsearch的客户端操作"><a class="markdownIt-Anchor" href="#第四章-elasticsearch的客户端操作"></a> 第四章 ElasticSearch的客户端操作</h1><p>实际开发中，主要有三种方式可以作为elasticsearch服务的客户端：</p><ul><li>第一种，elasticsearch-head插件</li><li>第二种，使用elasticsearch提供的Restful接口直接访问</li><li>第三种，使用elasticsearch提供的API进行访问</li></ul><h2 id="41-安装postman工具"><a class="markdownIt-Anchor" href="#41-安装postman工具"></a> 4.1 安装Postman工具</h2><p>Postman中文版是postman这款强大网页调试工具的windows客户端，提供功能强大的Web API &amp; HTTP 请求调试。软件功能非常强大，界面简洁明晰、操作方便快捷，设计得很人性化。Postman中文版能够发送任何类型的HTTP 请求 (GET, HEAD, POST, PUT…)，且可以附带任何数量的参数。</p><h2 id="41-下载postman工具"><a class="markdownIt-Anchor" href="#41-下载postman工具"></a> 4.1 下载Postman工具</h2><p>Postman官网：<a href="https://www.getpostman.com">https://www.getpostman.com</a></p><p>课程资料中已经提供了安装包</p><p><img src="image%5C41.png" alt="" /></p><h2 id="42-注册postman工具"><a class="markdownIt-Anchor" href="#42-注册postman工具"></a> 4.2 注册Postman工具</h2><p><img src="image%5C42.png" alt="" /></p><p><img src="image%5C43.png" alt="" /></p><h2 id="42-使用postman工具进行restful接口访问"><a class="markdownIt-Anchor" href="#42-使用postman工具进行restful接口访问"></a> 4.2 使用Postman工具进行Restful接口访问</h2><h3 id="421-elasticsearch的接口语法"><a class="markdownIt-Anchor" href="#421-elasticsearch的接口语法"></a> 4.2.1 ElasticSearch的接口语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X&lt;VERB&gt; &#39;&lt;PROTOCOL&gt;:&#x2F;&#x2F;&lt;HOST&gt;:&lt;PORT&gt;&#x2F;&lt;PATH&gt;?&lt;QUERY_STRING&gt;&#39; -d &#39;&lt;BODY&gt;&#39;</span><br></pre></td></tr></table></figure><p>其中：</p><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td><code>VERB</code></td><td>适当的 HTTP <em>方法</em> 或 <em>谓词</em> : <code>GET</code>、 <code>POST</code>、 <code>PUT</code>、 <code>HEAD</code> 或者 <code>DELETE</code>。</td></tr><tr><td><code>PROTOCOL</code></td><td><code>http</code> 或者 <code>https</code>（如果你在 Elasticsearch 前面有一个 <code>https</code> 代理）</td></tr><tr><td><code>HOST</code></td><td>Elasticsearch 集群中任意节点的主机名，或者用 <code>localhost</code> 代表本地机器上的节点。</td></tr><tr><td><code>PORT</code></td><td>运行 Elasticsearch HTTP 服务的端口号，默认是 <code>9200</code> 。</td></tr><tr><td><code>PATH</code></td><td>API 的终端路径（例如 <code>_count</code> 将返回集群中文档数量）。Path 可能包含多个组件，例如：<code>_cluster/stats</code> 和 <code>_nodes/stats/jvm</code> 。</td></tr><tr><td><code>QUERY_STRING</code></td><td>任意可选的查询字符串参数 (例如 <code>?pretty</code> 将格式化地输出 JSON 返回值，使其更容易阅读)</td></tr><tr><td><code>BODY</code></td><td>一个 JSON 格式的请求体 (如果请求需要的话)</td></tr></tbody></table><h3 id="422-创建索引index和映射mapping"><a class="markdownIt-Anchor" href="#422-创建索引index和映射mapping"></a> 4.2.2 创建索引index和映射mapping</h3><p>请求url：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUTlocalhost:9200/blog1</span><br></pre></td></tr></table></figure><p>请求体：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;article&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;long&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;store&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;index&quot;</span>:<span class="string">&quot;not_analyzed&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;title&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;store&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;index&quot;</span>:<span class="string">&quot;analyzed&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;analyzer&quot;</span>:<span class="string">&quot;standard&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;content&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;store&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;index&quot;</span>:<span class="string">&quot;analyzed&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;analyzer&quot;</span>:<span class="string">&quot;standard&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>postman截图：</p><p><img src="image%5C46.png" alt="" /></p><p>elasticsearch-head查看：</p><p><img src="image%5C47.png" alt="" /></p><p>###4.2.3 创建索引后设置Mapping</p><p>我们可以在创建索引时设置mapping信息，当然也可以先创建索引然后再设置mapping。</p><p>在上一个步骤中不设置maping信息，直接使用put方法创建一个索引，然后设置mapping信息。</p><p>请求的url：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POSThttp:&#x2F;&#x2F;127.0.0.1:9200&#x2F;blog2&#x2F;hello&#x2F;_mapping</span><br></pre></td></tr></table></figure><p>请求体：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;hello&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>:&#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;long&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;store&quot;</span>:<span class="literal">true</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;title&quot;</span>:&#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;store&quot;</span>:<span class="literal">true</span>,</span><br><span class="line">                <span class="attr">&quot;index&quot;</span>:<span class="literal">true</span>,</span><br><span class="line">                <span class="attr">&quot;analyzer&quot;</span>:<span class="string">&quot;standard&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;content&quot;</span>:&#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;store&quot;</span>:<span class="literal">true</span>,</span><br><span class="line">                <span class="attr">&quot;index&quot;</span>:<span class="literal">true</span>,</span><br><span class="line">                <span class="attr">&quot;analyzer&quot;</span>:<span class="string">&quot;standard&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PostMan截图<br /><img src="image%5C61.png" alt="" /></p><h3 id="424-删除索引index"><a class="markdownIt-Anchor" href="#424-删除索引index"></a> 4.2.4 删除索引index</h3><p>请求url：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETElocalhost:9200/blog1</span><br></pre></td></tr></table></figure><p>postman截图：</p><p><img src="image%5C48.png" alt="" /></p><p>elasticsearch-head查看：</p><p><img src="image%5C49.png" alt="" /></p><h3 id="425-创建文档document"><a class="markdownIt-Anchor" href="#425-创建文档document"></a> 4.2.5 创建文档document</h3><p>请求url：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POSTlocalhost:9200/blog1/article/1</span><br></pre></td></tr></table></figure><p>请求体：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;id&quot;</span>:<span class="number">1</span>,</span><br><span class="line"><span class="attr">&quot;title&quot;</span>:<span class="string">&quot;ElasticSearch是一个基于Lucene的搜索服务器&quot;</span>,</span><br><span class="line"><span class="attr">&quot;content&quot;</span>:<span class="string">&quot;它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>postman截图：</p><p><img src="image%5C50.png" alt="" /></p><p>elasticsearch-head查看：</p><p><img src="image%5C51.png" alt="" /></p><h3 id="426-修改文档document"><a class="markdownIt-Anchor" href="#426-修改文档document"></a> 4.2.6 修改文档document</h3><p>请求url：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POSTlocalhost:9200/blog1/article/1</span><br></pre></td></tr></table></figure><p>请求体：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;id&quot;</span>:<span class="number">1</span>,</span><br><span class="line"><span class="attr">&quot;title&quot;</span>:<span class="string">&quot;【修改】ElasticSearch是一个基于Lucene的搜索服务器&quot;</span>,</span><br><span class="line"><span class="attr">&quot;content&quot;</span>:<span class="string">&quot;【修改】它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>postman截图：</p><p><img src="image%5C52.png" alt="" /></p><p>elasticsearch-head查看：</p><p><img src="image%5C53.png" alt="" /></p><h3 id="427-删除文档document"><a class="markdownIt-Anchor" href="#427-删除文档document"></a> 4.2.7 删除文档document</h3><p>请求url：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETElocalhost:9200/blog1/article/1</span><br></pre></td></tr></table></figure><p>postman截图：</p><p><img src="image%5C54.png" alt="" /></p><p>elasticsearch-head查看：</p><p><img src="image%5C55.png" alt="" /></p><h3 id="428-查询文档-根据id查询"><a class="markdownIt-Anchor" href="#428-查询文档-根据id查询"></a> 4.2.8 查询文档-根据id查询</h3><p>请求url：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GETlocalhost:9200/blog1/article/1</span><br></pre></td></tr></table></figure><p>postman截图：</p><p><img src="image%5C56.png" alt="" /></p><h3 id="429-查询文档-querystring查询"><a class="markdownIt-Anchor" href="#429-查询文档-querystring查询"></a> 4.2.9 查询文档-querystring查询</h3><p>请求url：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POSTlocalhost:9200/blog1/article/_search</span><br></pre></td></tr></table></figure><p>请求体：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;query_string&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;default_field&quot;</span>: <span class="string">&quot;title&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;query&quot;</span>: <span class="string">&quot;搜索服务器&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>postman截图：</p><p><img src="image%5C57.png" alt="" /></p><p>注意：</p><p>将搜索内容&quot;搜索服务器&quot;修改为&quot;钢索&quot;，同样也能搜索到文档，该原因会在下面讲解中得到答案</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;query_string&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;default_field&quot;</span>: <span class="string">&quot;title&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;query&quot;</span>: <span class="string">&quot;钢索&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4210-查询文档-term查询"><a class="markdownIt-Anchor" href="#4210-查询文档-term查询"></a> 4.2.10 查询文档-term查询</h3><p>请求url：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POSTlocalhost:9200/blog1/article/_search</span><br></pre></td></tr></table></figure><p>请求体：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;term&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;搜索&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>postman截图：</p><p><img src="image%5C58.png" alt="" /></p><h1 id="第五章-ik-分词器和elasticsearch集成使用"><a class="markdownIt-Anchor" href="#第五章-ik-分词器和elasticsearch集成使用"></a> 第五章 IK 分词器和ElasticSearch集成使用</h1><h2 id="51-上述查询存在问题分析"><a class="markdownIt-Anchor" href="#51-上述查询存在问题分析"></a> 5.1 上述查询存在问题分析</h2><p>在进行字符串查询时，我们发现去搜索&quot;搜索服务器&quot;和&quot;钢索&quot;都可以搜索到数据；</p><p>而在进行词条查询时，我们搜索&quot;搜索&quot;却没有搜索到数据；</p><p>究其原因是ElasticSearch的标准分词器导致的，当我们创建索引时，字段使用的是标准分词器：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;article&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;long&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;store&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;index&quot;</span>:<span class="string">&quot;not_analyzed&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;title&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;store&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;index&quot;</span>:<span class="string">&quot;analyzed&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;analyzer&quot;</span>:<span class="string">&quot;standard&quot;</span><span class="comment">//标准分词器</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;content&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;store&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;index&quot;</span>:<span class="string">&quot;analyzed&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;analyzer&quot;</span>:<span class="string">&quot;standard&quot;</span><span class="comment">//标准分词器</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如对 “我是程序员” 进行分词</p><p>标准分词器分词效果测试：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9200/_analyze?analyzer=standard&amp;pretty=true&amp;text=我是程序员</span><br></pre></td></tr></table></figure><p>分词结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;我&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;是&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;程&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">3</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;序&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">3</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">4</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">3</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span> : <span class="string">&quot;员&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> : <span class="number">4</span>,</span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> : <span class="number">5</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;position&quot;</span> : <span class="number">4</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而我们需要的分词效果是：我、是、程序、程序员</p><p>这样的话就需要对中文支持良好的分析器的支持，支持中文分词的分词器有很多，word分词器、庖丁解牛、盘古分词、Ansj分词等，但我们常用的还是下面要介绍的IK分词器。</p><h2 id="52-ik分词器简介"><a class="markdownIt-Anchor" href="#52-ik分词器简介"></a> 5.2 IK分词器简介</h2><p>IKAnalyzer是一个开源的，基于java语言开发的轻量级的中文分词工具包。从2006年12月推出1.0版开始，IKAnalyzer已经推出 了3个大版本。最初，它是以开源项目Lucene为应用主体的，结合词典分词和文法分析算法的中文分词组件。新版本的IKAnalyzer3.0则发展为 面向Java的公用分词组件，独立于Lucene项目，同时提供了对Lucene的默认优化实现。</p><p>IK分词器3.0的特性如下：</p><p>1）采用了特有的“正向迭代最细粒度切分算法“，具有60万字/秒的高速处理能力。<br />2）采用了多子处理器分析模式，支持：英文字母（IP地址、Email、URL）、数字（日期，常用中文数量词，罗马数字，科学计数法），中文词汇（姓名、地名处理）等分词处理。<br />3）对中英联合支持不是很好,在这方面的处理比较麻烦.需再做一次查询,同时是支持个人词条的优化的词典存储，更小的内存占用。<br />4）支持用户词典扩展定义。<br />5）针对Lucene全文检索优化的查询分析器IKQueryParser；采用歧义分析算法优化查询关键字的搜索排列组合，能极大的提高Lucene检索的命中率。</p><h2 id="53-elasticsearch集成ik分词器"><a class="markdownIt-Anchor" href="#53-elasticsearch集成ik分词器"></a> 5.3 ElasticSearch集成IK分词器</h2><h3 id="531-ik分词器的安装"><a class="markdownIt-Anchor" href="#531-ik分词器的安装"></a> 5.3.1 IK分词器的安装</h3><p>1）下载地址：<a href="https://github.com/medcl/elasticsearch-analysis-ik/releases">https://github.com/medcl/elasticsearch-analysis-ik/releases</a></p><p>课程资料也提供了IK分词器的压缩包：</p><p><img src="image/34.png" alt="" /></p><p>2）解压，将解压后的elasticsearch文件夹拷贝到elasticsearch-5.6.8\plugins下，并重命名文件夹为analysis-ik</p><p><img src="image/35.png" alt="" /></p><p>3）重新启动ElasticSearch，即可加载IK分词器</p><p><img src="image/36.png" alt="" /></p><h3 id="532-ik分词器测试"><a class="markdownIt-Anchor" href="#532-ik分词器测试"></a> 5.3.2 IK分词器测试</h3><p>IK提供了两个分词算法ik_smart 和 ik_max_word</p><p>其中 ik_smart 为最少切分，ik_max_word为最细粒度划分</p><p>我们分别来试一下</p><p>1）最小切分：在浏览器地址栏输入地址</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9200/_analyze?analyzer=ik_smart&amp;pretty=true&amp;text=我是程序员</span><br></pre></td></tr></table></figure><p>输出的结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;我&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 1,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;是&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 1,</span><br><span class="line">      &quot;end_offset&quot; : 2,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;程序员&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 2,</span><br><span class="line">      &quot;end_offset&quot; : 5,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2）最细切分：在浏览器地址栏输入地址</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:9200/_analyze?analyzer=ik_max_word&amp;pretty=true&amp;text=我是程序员</span><br></pre></td></tr></table></figure><p>输出的结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;我&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 1,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;是&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 1,</span><br><span class="line">      &quot;end_offset&quot; : 2,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;程序员&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 2,</span><br><span class="line">      &quot;end_offset&quot; : 5,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;程序&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 2,</span><br><span class="line">      &quot;end_offset&quot; : 4,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 3</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;员&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 4,</span><br><span class="line">      &quot;end_offset&quot; : 5,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 4</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="54-修改索引映射mapping"><a class="markdownIt-Anchor" href="#54-修改索引映射mapping"></a> 5.4 修改索引映射mapping</h2><h3 id="541-重建索引"><a class="markdownIt-Anchor" href="#541-重建索引"></a> 5.4.1 重建索引</h3><p>删除原有blog1索引</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETElocalhost:9200/blog1</span><br></pre></td></tr></table></figure><p>创建blog1索引，此时分词器使用ik_max_word</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUTlocalhost:9200/blog1</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;article&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;long&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;store&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;index&quot;</span>:<span class="string">&quot;not_analyzed&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;title&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;store&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;index&quot;</span>:<span class="string">&quot;analyzed&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;content&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;store&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;index&quot;</span>:<span class="string">&quot;analyzed&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建文档</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POSTlocalhost:9200/blog1/article/1</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;id&quot;</span>:<span class="number">1</span>,</span><br><span class="line"><span class="attr">&quot;title&quot;</span>:<span class="string">&quot;ElasticSearch是一个基于Lucene的搜索服务器&quot;</span>,</span><br><span class="line"><span class="attr">&quot;content&quot;</span>:<span class="string">&quot;它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="542-再次测试querystring查询"><a class="markdownIt-Anchor" href="#542-再次测试querystring查询"></a> 5.4.2 再次测试queryString查询</h3><p>请求url：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POSTlocalhost:9200/blog1/article/_search</span><br></pre></td></tr></table></figure><p>请求体：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;query_string&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;default_field&quot;</span>: <span class="string">&quot;title&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;query&quot;</span>: <span class="string">&quot;搜索服务器&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>postman截图：</p><p><img src="image/57.png" alt="" /></p><p>将请求体搜索字符串修改为&quot;钢索&quot;，再次查询：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;query_string&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;default_field&quot;</span>: <span class="string">&quot;title&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;query&quot;</span>: <span class="string">&quot;钢索&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>postman截图：</p><p><img src="image%5C59.png" alt="" /></p><h3 id="543-再次测试term测试"><a class="markdownIt-Anchor" href="#543-再次测试term测试"></a> 5.4.3 再次测试term测试</h3><p>请求url：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POSTlocalhost:9200/blog1/article/_search</span><br></pre></td></tr></table></figure><p>请求体：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;term&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;搜索&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>postman截图：</p><p><img src="image%5C60.png" alt="" /></p><h1 id="第六章-elasticsearch集群"><a class="markdownIt-Anchor" href="#第六章-elasticsearch集群"></a> 第六章 ElasticSearch集群</h1><p>​ES集群是一个 P2P类型(使用 gossip 协议)的分布式系统，除了集群状态管理以外，其他所有的请求都可以发送到集群内任意一台节点上，这个节点可以自己找到需要转发给哪些节点，并且直接跟这些节点通信。所以，从网络架构及服务配置上来说，构建集群所需要的配置极其简单。在 Elasticsearch 2.0 之前，无阻碍的网络下，所有配置了相同 <a href="http://cluster.name">cluster.name</a> 的节点都自动归属到一个集群中。2.0 版本之后，基于安全的考虑避免开发环境过于随便造成的麻烦，从 2.0 版本开始，默认的自动发现方式改为了单播(unicast)方式。配置里提供几台节点的地址，ES 将其视作 gossip router 角色，借以完成集群的发现。由于这只是 ES 内一个很小的功能，所以 gossip router 角色并不需要单独配置，每个 ES 节点都可以担任。所以，采用单播方式的集群，各节点都配置相同的几个节点列表作为 router 即可。</p><p>​集群中节点数量没有限制，一般大于等于2个节点就可以看做是集群了。一般处于高性能及高可用方面来考虑一般集群中的节点数量都是3个及3个以上。</p><h2 id="61-集群的相关概念"><a class="markdownIt-Anchor" href="#61-集群的相关概念"></a> 6.1 集群的相关概念</h2><h3 id="611-集群-cluster"><a class="markdownIt-Anchor" href="#611-集群-cluster"></a> 6.1.1 集群 cluster</h3><p>一个集群就是由一个或多个节点组织在一起，它们共同持有整个的数据，并一起提供索引和搜索功能。一个集群由一个唯一的名字标识，这个名字默认就是“elasticsearch”。这个名字是重要的，因为一个节点只能通过指定某个集群的名字，来加入这个集群</p><h3 id="612-节点-node"><a class="markdownIt-Anchor" href="#612-节点-node"></a> 6.1.2 节点 node</h3><p>一个节点是集群中的一个服务器，作为集群的一部分，它存储数据，参与集群的索引和搜索功能。和集群类似，一个节点也是由一个名字来标识的，默认情况下，这个名字是一个随机的漫威漫画角色的名字，这个名字会在启动的时候赋予节点。这个名字对于管理工作来说挺重要的，因为在这个管理过程中，你会去确定网络中的哪些服务器对应于Elasticsearch集群中的哪些节点。</p><p>一个节点可以通过配置集群名称的方式来加入一个指定的集群。默认情况下，每个节点都会被安排加入到一个叫做“elasticsearch”的集群中，这意味着，如果你在你的网络中启动了若干个节点，并假定它们能够相互发现彼此，它们将会自动地形成并加入到一个叫做“elasticsearch”的集群中。</p><p>在一个集群里，只要你想，可以拥有任意多个节点。而且，如果当前你的网络中没有运行任何Elasticsearch节点，这时启动一个节点，会默认创建并加入一个叫做“elasticsearch”的集群。</p><h3 id="613-分片和复制-shardsreplicas"><a class="markdownIt-Anchor" href="#613-分片和复制-shardsreplicas"></a> 6.1.3 分片和复制 shards&amp;replicas</h3><p>一个索引可以存储超出单个结点硬件限制的大量数据。比如，一个具有10亿文档的索引占据1TB的磁盘空间，而任一节点都没有这样大的磁盘空间；或者单个节点处理搜索请求，响应太慢。为了解决这个问题，Elasticsearch提供了将索引划分成多份的能力，这些份就叫做分片。当你创建一个索引的时候，你可以指定你想要的分片的数量。每个分片本身也是一个功能完善并且独立的“索引”，这个“索引”可以被放置到集群中的任何节点上。分片很重要，主要有两方面的原因：<br />1）允许你水平分割/扩展你的内容容量。<br />2）允许你在分片（潜在地，位于多个节点上）之上进行分布式的、并行的操作，进而提高性能/吞吐量。</p><p>至于一个分片怎样分布，它的文档怎样聚合回搜索请求，是完全由Elasticsearch管理的，对于作为用户的你来说，这些都是透明的。</p><p>在一个网络/云的环境里，失败随时都可能发生，在某个分片/节点不知怎么的就处于离线状态，或者由于任何原因消失了，这种情况下，有一个故障转移机制是非常有用并且是强烈推荐的。为此目的，Elasticsearch允许你创建分片的一份或多份拷贝，这些拷贝叫做复制分片，或者直接叫复制。</p><p>复制之所以重要，有两个主要原因： 在分片/节点失败的情况下，提供了高可用性。因为这个原因，注意到复制分片从不与原/主要（original/primary）分片置于同一节点上是非常重要的。扩展你的搜索量/吞吐量，因为搜索可以在所有的复制上并行运行。总之，每个索引可以被分成多个分片。一个索引也可以被复制0次（意思是没有复制）或多次。一旦复制了，每个索引就有了主分片（作为复制源的原来的分片）和复制分片（主分片的拷贝）之别。分片和复制的数量可以在索引创建的时候指定。在索引创建之后，你可以在任何时候动态地改变复制的数量，但是你事后不能改变分片的数量。</p><p>默认情况下，Elasticsearch中的每个索引被分片5个主分片和1个复制，这意味着，如果你的集群中至少有两个节点，你的索引将会有5个主分片和另外5个复制分片（1个完全拷贝），这样的话每个索引总共就有10个分片。</p><h2 id="62-集群的搭建"><a class="markdownIt-Anchor" href="#62-集群的搭建"></a> 6.2 集群的搭建</h2><h3 id="621-准备三台elasticsearch服务器"><a class="markdownIt-Anchor" href="#621-准备三台elasticsearch服务器"></a> 6.2.1 准备三台elasticsearch服务器</h3><p>创建elasticsearch-cluster文件夹，在内部复制三个elasticsearch服务</p><h3 id="622-修改每台服务器配置"><a class="markdownIt-Anchor" href="#622-修改每台服务器配置"></a> 6.2.2 修改每台服务器配置</h3><p>修改elasticsearch-cluster\node*\config\elasticsearch.yml配置文件</p><h4 id="node1节点"><a class="markdownIt-Anchor" href="#node1节点"></a> node1节点：</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#节点1的配置信息：</span></span><br><span class="line"><span class="comment">#集群名称，保证唯一</span></span><br><span class="line"><span class="attr">cluster.name:</span> <span class="string">my-elasticsearch</span></span><br><span class="line"><span class="comment">#节点名称，必须不一样</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">node-1</span></span><br><span class="line"><span class="comment">#必须为本机的ip地址</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="comment">#服务端口号，在同一机器下必须不一样</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9200</span></span><br><span class="line"><span class="comment">#集群间通信端口号，在同一机器下必须不一样</span></span><br><span class="line"><span class="attr">transport.tcp.port:</span> <span class="number">9300</span></span><br><span class="line"><span class="comment">#设置集群自动发现机器ip集合</span></span><br><span class="line"><span class="attr">discovery.zen.ping.unicast.hosts:</span> [<span class="string">&quot;127.0.0.1:9300&quot;</span>,<span class="string">&quot;127.0.0.1:9301&quot;</span>,<span class="string">&quot;127.0.0.1:9302&quot;</span>]</span><br></pre></td></tr></table></figure><h4 id="node2节点"><a class="markdownIt-Anchor" href="#node2节点"></a> node2节点：</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#节点2的配置信息：</span></span><br><span class="line"><span class="comment">#集群名称，保证唯一</span></span><br><span class="line"><span class="attr">cluster.name:</span> <span class="string">my-elasticsearch</span></span><br><span class="line"><span class="comment">#节点名称，必须不一样</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">node-2</span></span><br><span class="line"><span class="comment">#必须为本机的ip地址</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="comment">#服务端口号，在同一机器下必须不一样</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9201</span></span><br><span class="line"><span class="comment">#集群间通信端口号，在同一机器下必须不一样</span></span><br><span class="line"><span class="attr">transport.tcp.port:</span> <span class="number">9301</span></span><br><span class="line"><span class="comment">#设置集群自动发现机器ip集合</span></span><br><span class="line"><span class="attr">discovery.zen.ping.unicast.hosts:</span> [<span class="string">&quot;127.0.0.1:9300&quot;</span>,<span class="string">&quot;127.0.0.1:9301&quot;</span>,<span class="string">&quot;127.0.0.1:9302&quot;</span>]</span><br></pre></td></tr></table></figure><h4 id="node3节点"><a class="markdownIt-Anchor" href="#node3节点"></a> node3节点：</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#节点3的配置信息：</span></span><br><span class="line"><span class="comment">#集群名称，保证唯一</span></span><br><span class="line"><span class="attr">cluster.name:</span> <span class="string">my-elasticsearch</span></span><br><span class="line"><span class="comment">#节点名称，必须不一样</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">node-3</span></span><br><span class="line"><span class="comment">#必须为本机的ip地址</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="comment">#服务端口号，在同一机器下必须不一样</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9202</span></span><br><span class="line"><span class="comment">#集群间通信端口号，在同一机器下必须不一样</span></span><br><span class="line"><span class="attr">transport.tcp.port:</span> <span class="number">9302</span></span><br><span class="line"><span class="comment">#设置集群自动发现机器ip集合</span></span><br><span class="line"><span class="attr">discovery.zen.ping.unicast.hosts:</span> [<span class="string">&quot;127.0.0.1:9300&quot;</span>,<span class="string">&quot;127.0.0.1:9301&quot;</span>,<span class="string">&quot;127.0.0.1:9302&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="623-启动各个节点服务器"><a class="markdownIt-Anchor" href="#623-启动各个节点服务器"></a> 6.2.3 启动各个节点服务器</h3><p>双击elasticsearch-cluster\node*\bin\elasticsearch.bat</p><h4 id="启动节点1"><a class="markdownIt-Anchor" href="#启动节点1"></a> 启动节点1：</h4><p><img src="image%5C21.png" alt="" /></p><h4 id="启动节点2"><a class="markdownIt-Anchor" href="#启动节点2"></a> 启动节点2：</h4><p><img src="image%5C22.png" alt="" /></p><h4 id="启动节点3"><a class="markdownIt-Anchor" href="#启动节点3"></a> 启动节点3：</h4><p><img src="image%5C23.png" alt="" /></p><h3 id="624-集群测试"><a class="markdownIt-Anchor" href="#624-集群测试"></a> 6.2.4 集群测试</h3><h4 id="添加索引和映射"><a class="markdownIt-Anchor" href="#添加索引和映射"></a> 添加索引和映射</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUTlocalhost:9200/blog1</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;article&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;long&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;store&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;index&quot;</span>:<span class="string">&quot;not_analyzed&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;title&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;store&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;index&quot;</span>:<span class="string">&quot;analyzed&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;analyzer&quot;</span>:<span class="string">&quot;standard&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;content&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;store&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">&quot;index&quot;</span>:<span class="string">&quot;analyzed&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;analyzer&quot;</span>:<span class="string">&quot;standard&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加文档"><a class="markdownIt-Anchor" href="#添加文档"></a> 添加文档</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POSTlocalhost:9200/blog1/article/1</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;id&quot;</span>:<span class="number">1</span>,</span><br><span class="line"><span class="attr">&quot;title&quot;</span>:<span class="string">&quot;ElasticSearch是一个基于Lucene的搜索服务器&quot;</span>,</span><br><span class="line"><span class="attr">&quot;content&quot;</span>:<span class="string">&quot;它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用elasticsearch-header查看集群情况"><a class="markdownIt-Anchor" href="#使用elasticsearch-header查看集群情况"></a> 使用elasticsearch-header查看集群情况</h4><p><img src="image%5C62.png" alt="" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;elasticsearch第一天&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#elasticsearch第一天&quot;&gt;&lt;/a&gt; ElasticSearch第一天&lt;/h1&gt;
&lt;h2 id=&quot;学习目标&quot;&gt;&lt;a class=&quot;markdownI</summary>
      
    
    
    
    <category term="ElasticSearc" scheme="https://bizhi-1024.github.io/categories/ElasticSearc/"/>
    
    
    <category term="ElasticSearc" scheme="https://bizhi-1024.github.io/tags/ElasticSearc/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud教程</title>
    <link href="https://bizhi-1024.github.io/2021/04/25/Spring%20Cloud%20%E7%AC%AC%E4%B8%80%E5%A4%A9%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
    <id>https://bizhi-1024.github.io/2021/04/25/Spring%20Cloud%20%E7%AC%AC%E4%B8%80%E5%A4%A9%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/</id>
    <published>2021-04-25T07:53:44.600Z</published>
    <updated>2021-04-25T08:20:20.885Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-系统架构演变概述"><a class="markdownIt-Anchor" href="#1-系统架构演变概述"></a> 1. 系统架构演变概述</h2><p><strong>目标</strong>：了解项目架构的演变历程</p><p><strong>小结</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph LR;</span><br><span class="line">1[集中式架构] --&gt; 2[垂直拆分]</span><br><span class="line">2 --&gt; 3[分布式服务]</span><br><span class="line">3 --&gt; 4[SOA面向服务架构]</span><br><span class="line">4 --&gt; 5[微服务架构]</span><br></pre></td></tr></table></figure><h2 id="2-微服务架构说明"><a class="markdownIt-Anchor" href="#2-微服务架构说明"></a> 2. 微服务架构说明</h2><p><strong>目标</strong>：了解SOA与微服务架构的区别以及说出微服务架构的特点</p><p><strong>分析</strong>：</p><p>SOA使用了ESB组件的面向服务架构：ESB自身实现复杂；应用服务粒度较大，所有服务之间的通信都经过ESB会降低通信速度；部署、测试ESB比较麻烦。</p><p><strong>小结</strong>：</p><p><strong>微服务架构</strong>：是一套使用小服务或者单一业务来开发单个应用的方式或途径。</p><p>微服务架构特点：</p><ul><li>单一职责</li><li>服务粒度小</li><li>面向服务（对外暴露REST api）</li><li>服务之间相互独立</li></ul><p>与使用ESB的SOA架构的区别：微服务架构没有使用ESB，有服务治理注册中心；业务粒度小。</p><h2 id="3-服务调用方式说明"><a class="markdownIt-Anchor" href="#3-服务调用方式说明"></a> 3. 服务调用方式说明</h2><p><strong>目标</strong>：能够说出服务调用方式种类</p><p><strong>小结</strong>：</p><ul><li>RPC：基于socket，速度快，效率高；webservice、dubbo</li><li>HTTP：基于TCP，封装比较臃肿；对服务和调用方没有任何技术、语言的限定，自由灵活；RESTful，Spring Cloud</li></ul><h2 id="4-spring-resttemplate示例工程导入"><a class="markdownIt-Anchor" href="#4-spring-resttemplate示例工程导入"></a> 4. Spring RestTemplate示例工程导入</h2><p><strong>目标</strong>：了解Spring RestTemplate的应用</p><p><strong>分析</strong>：</p><p>一般情况下有如下三种http客户端工具类包都可以方便的进行http服务调用：</p><ul><li>httpClient</li><li>okHttp</li><li>JDK原生URLConnection</li></ul><p>spring 提供了RestTemplate的工具类对上述的3种http客户端工具类进行了封装，可在spring项目中使用RestTemplate进行服务调用。</p><p><strong>小结</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestTemplateTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String url = <span class="string">&quot;http://localhost/user/8&quot;</span>;</span><br><span class="line">        <span class="comment">//restTemplate可以对json格式字符串进行反序列化</span></span><br><span class="line">        User user = restTemplate.getForObject(url, User.class);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-spring-cloud概述"><a class="markdownIt-Anchor" href="#5-spring-cloud概述"></a> 5. Spring Cloud概述</h2><p><strong>目标</strong>：Spring Cloud整合的组件和版本特征</p><p><strong>小结</strong>：</p><ul><li>整合的组件可以有很多组件；常见的组件有：eureka注册中心，Gateway网关，Ribbon负载均衡，Feign服务调用，Hystrix熔断器。在有需要的时候项目添加对于的启动器依赖即可。</li><li>版本特征：以英文单词命名（伦敦地铁站名）</li></ul><h2 id="6-创建微服务工程"><a class="markdownIt-Anchor" href="#6-创建微服务工程"></a> 6. 创建微服务工程</h2><p><strong>目标</strong>：创建微服务父工程heima-springcloud、用户服务工程user-service、服务消费工程consumer-demo</p><p><strong>分析</strong>：</p><p>需求：查询数据库中的用户数据并输出到浏览器</p><ul><li>父工程heima-springcloud：添加spring boot父坐标和管理其它组件的依赖</li><li>用户服务工程user-service：整合mybatis查询数据库中用户数据；提供查询用户服务</li><li>服务消费工程consumer-demo：利用查询用户服务获取用户数据并输出到浏览器</li></ul><p><strong>小结</strong>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- springCloud --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过 <code>scope</code> 的import可以继承 <code>spring-cloud-dependencies</code> 工程中的依赖</p><h2 id="7-搭建配置user-service工程"><a class="markdownIt-Anchor" href="#7-搭建配置user-service工程"></a> 7. 搭建配置user-service工程</h2><p><strong>目标</strong>：配置user-service工程并能够根据用户id查询数据库中用户</p><p><strong>分析</strong>：</p><p>需求：可以访问http://localhost:9091/user/8输出用户数据</p><p>实现步骤：</p><ol><li>添加启动器依赖（web、通用Mapper）；</li><li>创建启动引导类和配置文件；</li><li>修改配置文件中的参数；</li><li>编写测试代码（UserMapper，UserService，UserController）；</li><li>测试</li></ol><p><strong>小结</strong>：</p><ul><li>添加启动器依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 通用Mapper启动器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mysql驱动 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>编写配置文件</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9091</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springcloud</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.itheima.user.pojo</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-搭建配置consumer-demo工程"><a class="markdownIt-Anchor" href="#8-搭建配置consumer-demo工程"></a> 8. 搭建配置consumer-demo工程</h2><p><strong>目标</strong>：编写测试类使用restTemplate访问user-service的路径根据id查询用户</p><p><strong>分析</strong>：</p><p>需求：访问http://localhost:8080/consumer/8 使用RestTemplate获取http://localhost:9091/user/8的数据</p><p>实现步骤：</p><ol><li>添加启动器依赖；</li><li>创建启动引导类（注册RestTemplate）和配置文件；</li><li>编写测试代码（ConsumerController中使用restTemplate访问服务获取数据）</li><li>测试</li></ol><p><strong>小结</strong>：</p><ul><li>服务管理<br />如何自动注册和发现<br />如何实现状态监管<br />如何实现动态路由</li><li>服务如何实现负载均衡</li><li>服务如何解决容灾问题</li><li>服务如何实现统一配置</li></ul><p>上述的问题都可以通过Spring Cloud的各种组件解决。</p><h2 id="9-eureka注册中心说明"><a class="markdownIt-Anchor" href="#9-eureka注册中心说明"></a> 9. Eureka注册中心说明</h2><p><strong>目标</strong>：说出Eureka的主要功能</p><p><strong>小结</strong>：</p><p>Eureka的主要功能是进行服务管理，定期检查服务状态，返回服务地址列表。</p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/1560439174201.png" alt="" /></p><h2 id="10-搭建eureka-server工程"><a class="markdownIt-Anchor" href="#10-搭建eureka-server工程"></a> 10. 搭建eureka-server工程</h2><p><strong>目标</strong>：添加eureka对应依赖和编写引导类搭建eureka服务并可访问eureka服务界面</p><p><strong>分析</strong>：</p><p>Eureka是服务注册中心，只做服务注册；自身并不提供服务也不消费服务。可以搭建web工程使用Eureka，可以使用Spring Boot方式搭建。</p><p>搭建步骤：</p><ol><li>创建工程；</li><li>添加启动器依赖；</li><li>编写启动引导类（添加Eureka的服务注解）和配置文件；</li><li>修改配置文件（端口，应用名称…）；</li><li>启动测试</li></ol><p><strong>小结</strong>：</p><ul><li>启动器依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>配置文件</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">10086</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">eureka-server</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="comment"># eureka 服务地址，如果是集群的话；需要指定其它集群eureka地址</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:10086/eureka</span></span><br><span class="line">    <span class="comment"># 不注册自己</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 不拉取服务</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="11-服务注册与发现"><a class="markdownIt-Anchor" href="#11-服务注册与发现"></a> 11. 服务注册与发现</h2><p><strong>目标</strong>：将user-service的服务注册到eureka并在consumer-demo中可以根据服务名称调用</p><p><strong>分析</strong>：</p><ul><li>服务注册：在服务提供工程user-service上添加Eureka客户端依赖；自动将服务注册到EurekaServer服务地址列表。<ul><li>添加依赖；</li><li>改造启动引导类；添加开启Eureka客户端发现的注解；</li><li>修改配置文件；设置Eureka 服务地址</li></ul></li><li>服务发现：在服务消费工程consumer-demo上添加Eureka客户端依赖；可以使用工具类根据服务名称获取对应的服务地址列表。<ul><li>添加依赖；</li><li>改造启动引导类；添加开启Eureka客户端发现的注解；</li><li>修改配置文件；设置Eureka 服务地址；</li><li>改造处理器类ConsumerController，可以使用工具类DiscoveryClient根据服务名称获取对应服务地址列表。</li></ul></li></ul><p><strong>小结</strong>：</p><ul><li>添加Eureka客户端依赖；</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>添加启动引导类注解；</li></ul><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/1560519608668.png" alt="" /></p><ul><li>修改配置</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">consumer-demo</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:10086/eureka</span></span><br></pre></td></tr></table></figure><h2 id="12-eureka-server高可用配置"><a class="markdownIt-Anchor" href="#12-eureka-server高可用配置"></a> 12. Eureka Server高可用配置</h2><p><strong>目标</strong>：可以启动两台eureka-server实例；在eureka管理界面看到两个实例</p><p><strong>分析</strong>：</p><p>Eureka Server是一个web应用，可以启动多个实例（配置不同端口）保证Eureka Server的高可用。</p><p><strong>小结</strong>：</p><p><strong>高可用配置</strong>：将Eureka Server作为一个服务注册到其它Eureka Server，这样多个Eureka Server之间就能够互相发现对方，同步服务，实现Eureka Server集群。</p><h2 id="13-eureka客户端与服务端配置"><a class="markdownIt-Anchor" href="#13-eureka客户端与服务端配置"></a> 13. Eureka客户端与服务端配置</h2><p><strong>目标</strong>：配置eureka客户端user-service的注册、续约等配置项，配置eureka客户端consumer-demo的获取服务间隔时间；了解失效剔除和自我保护</p><p><strong>分析</strong>：</p><ul><li>Eureka客户端工程<ul><li>user-service 服务提供<ul><li>服务地址使用ip方式</li><li>续约</li></ul></li><li>consumer-demo 服务消费<ul><li>获取服务地址的频率</li></ul></li></ul></li><li>Eureka服务端工程 eureka-server<ul><li>失效剔除</li><li>自我保护</li></ul></li></ul><p><strong>小结</strong>：</p><ul><li>user-service</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:10086/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="comment"># 更倾向使用ip地址，而不是host名</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># ip地址</span></span><br><span class="line">    <span class="attr">ip-address:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    <span class="comment"># 续约间隔，默认30秒</span></span><br><span class="line">    <span class="attr">lease-renewal-interval-in-seconds:</span> <span class="number">5</span></span><br><span class="line">    <span class="comment"># 服务失效时间，默认90秒</span></span><br><span class="line">    <span class="attr">lease-expiration-duration-in-seconds:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><ul><li>consumer-demo</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:10086/eureka</span></span><br><span class="line">    <span class="comment"># 获取服务地址列表间隔时间，默认30秒</span></span><br><span class="line">    <span class="attr">registry-fetch-interval-seconds:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li>eureka-server</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="comment"># 服务失效剔除时间间隔，默认60秒</span></span><br><span class="line">    <span class="attr">eviction-interval-timer-in-ms:</span> <span class="number">60000</span></span><br><span class="line">    <span class="comment"># 关闭自我保护模式（默认是打开的）</span></span><br><span class="line">    <span class="attr">enable-self-preservation:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="14-负载均衡ribbon简介"><a class="markdownIt-Anchor" href="#14-负载均衡ribbon简介"></a> 14. 负载均衡Ribbon简介</h2><p><strong>目标</strong>：描述负载均衡和ribbon的作用</p><p><strong>分析</strong>：</p><p>负载均衡是一个算法，可以通过该算法实现从地址列表中获取一个地址进行服务调用。</p><p>在Spring Cloud中提供了负载均衡器：Ribbon</p><p><strong>小结</strong>：</p><p>Ribbon提供了轮询、随机两种负载均衡算法（默认是轮询）可以实现从地址列表中使用负载均衡算法获取地址进行服务调用。</p><h2 id="15-ribbon负载均衡应用"><a class="markdownIt-Anchor" href="#15-ribbon负载均衡应用"></a> 15. Ribbon负载均衡应用</h2><p><strong>目标</strong>：配置启动两个用户服务，在consumer-demo中使用服务名实现根据用户id获取用户</p><p><strong>分析</strong>：</p><p>需求：可以使用RestTemplate访问http://user-service/user/8获取服务数据。</p><p>可以使用Ribbon负载均衡：在执行RestTemplate发送服务地址请求的时候，使用负载均衡拦截器拦截，根据服务名获取服务地址列表，使用Ribbon负载均衡算法从服务地址列表中选择一个服务地址，访问该地址获取服务数据。</p><p>实现步骤：</p><ol><li>启动多个user-service实例（9091,9092）；</li><li>修改RestTemplate实例化方法，添加负载均衡注解；</li><li>修改ConsumerController；</li><li>测试</li></ol><p><strong>小结</strong>：</p><p>在实例化RestTemplate的时候使用@LoadBalanced，服务地址直接可以使用服务名。</p><h2 id="16-熔断器hystrix简介"><a class="markdownIt-Anchor" href="#16-熔断器hystrix简介"></a> 16. 熔断器Hystrix简介</h2><p><strong>目标</strong>：了解熔断器Hystrix的作用</p><p><strong>小结</strong>：</p><p>Hystrix是一个延迟和容错库，用于隔离访问远程服务，防止出现级联失败。</p><h2 id="17-线程隔离服务降级"><a class="markdownIt-Anchor" href="#17-线程隔离服务降级"></a> 17. 线程隔离&amp;服务降级</h2><p><strong>目标</strong>：了解什么是线程隔离和服务降级</p><p><strong>分析</strong>：</p><p>Hystrix解决雪崩效应：</p><ul><li>线程隔离：用户请求不直接访问服务，而是使用线程池中空闲的线程访问服务，加速失败判断时间。</li><li>服务降级：及时返回服务调用失败的结果，让线程不因为等待服务而阻塞。</li></ul><p><strong>小结</strong>：</p><ul><li>consumer-demo中添加依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>开启熔断</li></ul><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/1560662674993.png" alt="" /></p><ul><li>降级逻辑</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/consumer&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@DefaultProperties(defaultFallback = &quot;defaultFallback&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DiscoveryClient discoveryClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="comment">//@HystrixCommand(fallbackMethod = &quot;queryByIdFallback&quot;)</span></span><br><span class="line">    <span class="meta">@HystrixCommand</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">queryById</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span></span>&#123;</span><br><span class="line">        <span class="comment">/*String url = &quot;http://localhost:9091/user/&quot;+id;</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        //获取eureka中注册的user-service的实例</span></span><br><span class="line"><span class="comment">        List&lt;ServiceInstance&gt; serviceInstances = discoveryClient.getInstances(&quot;user-service&quot;);</span></span><br><span class="line"><span class="comment">        ServiceInstance serviceInstance = serviceInstances.get(0);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        url = &quot;http://&quot; + serviceInstance.getHost() + &quot;:&quot; + serviceInstance.getPort() + &quot;/user/&quot; + id;*/</span></span><br><span class="line">        String url = <span class="string">&quot;http://user-service/user/&quot;</span> + id;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(url, String.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">queryByIdFallback</span><span class="params">(Long id)</span></span>&#123;</span><br><span class="line">        log.error(<span class="string">&quot;查询用户信息失败。id：&#123;&#125;&quot;</span>, id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;对不起，网络太拥挤了！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">defaultFallback</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;默认提示：对不起，网络太拥挤了！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>修改超时配置</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hystrix:</span></span><br><span class="line">  <span class="attr">command:</span></span><br><span class="line">    <span class="attr">default:</span></span><br><span class="line">      <span class="attr">execution:</span></span><br><span class="line">        <span class="attr">isolation:</span></span><br><span class="line">          <span class="attr">thread:</span></span><br><span class="line">            <span class="attr">timeoutInMilliseconds:</span> <span class="number">2000</span></span><br></pre></td></tr></table></figure><h2 id="18-服务熔断演示"><a class="markdownIt-Anchor" href="#18-服务熔断演示"></a> 18. 服务熔断演示</h2><p><strong>目标</strong>：了解熔断器工作原理</p><p><strong>小结</strong>：</p><p><img src="https://raw.githubusercontent.com/Bizhi-1024/Blog-imgs/main/images/1560682028169.png" alt="" /></p><p>可以通过配置服务熔断参数修改默认：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hystrix:</span></span><br><span class="line">  <span class="attr">command:</span></span><br><span class="line">    <span class="attr">default:</span></span><br><span class="line">      <span class="attr">execution:</span></span><br><span class="line">        <span class="attr">isolation:</span></span><br><span class="line">          <span class="attr">thread:</span></span><br><span class="line">            <span class="attr">timeoutInMilliseconds:</span> <span class="number">2000</span></span><br><span class="line">      <span class="attr">circuitBreaker:</span></span><br><span class="line">        <span class="attr">errorThresholdPercentage:</span> <span class="number">50</span> <span class="comment"># 触发熔断错误比例阈值，默认值50%</span></span><br><span class="line">        <span class="attr">sleepWindowInMilliseconds:</span> <span class="number">10000</span> <span class="comment"># 熔断后休眠时长，默认值5秒</span></span><br><span class="line">        <span class="attr">requestVolumeThreshold:</span> <span class="number">10</span> <span class="comment"># 熔断触发最小请求次数，默认值是20</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-系统架构演变概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-系统架构演变概述&quot;&gt;&lt;/a&gt; 1. 系统架构演变概述&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;目标&lt;/strong&gt;：了解项目架构的演变历程&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;</summary>
      
    
    
    
    <category term="spring cloud" scheme="https://bizhi-1024.github.io/categories/spring-cloud/"/>
    
    
    <category term="spring cloud" scheme="https://bizhi-1024.github.io/tags/spring-cloud/"/>
    
  </entry>
  
</feed>
